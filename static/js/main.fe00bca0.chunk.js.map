{"version":3,"sources":["components/NavigationLinkItem/NavigationLinkItem.tsx","components/Navigation/Navigation.tsx","components/PageTitle/PageTitle.tsx","pages/HomePage/HomePage.tsx","components/PersonLink/PersonLink.tsx","components/PersonItem/PersonItem.tsx","components/PeopleTable/PeopleTable.tsx","components/Loader/Loader.tsx","api.ts","pages/PeoplePage/PeoplePage.tsx","tools/getPreparedPeople.tsx","pages/PageNotFound/PageNotFound.tsx","App.tsx","index.tsx"],"names":["NavigationLinkItem","to","text","className","isActive","cn","Navigation","role","PageTitle","title","HomePage","PersonLink","person","slug","sex","name","PersonItem","born","died","motherName","fatherName","mother","father","personSlug","useParams","tableHeaders","PeopleTable","people","map","header","Loader","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","loadError","setLoadError","arePeopleLoading","setArePeopleLoading","arePeopleLoaded","setArePeopleLoaded","useEffect","peopleFromServer","preparedPeople","find","personMother","personFather","getPreparedPeople","catch","finally","length","PageNotFound","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.fe00bca0.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const NavigationLinkItem: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => cn(\n      'navbar-item',\n      {\n        'has-background-grey-lighter': isActive,\n      },\n    )}\n  >\n    { text }\n  </NavLink>\n);\n","import { NavigationLinkItem } from '../NavigationLinkItem';\n\nexport const Navigation = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavigationLinkItem to=\"/\" text=\"Home\" />\n        <NavigationLinkItem to=\"/people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import React from 'react';\n\ntype Props = {\n  title: string;\n};\n\nexport const PageTitle: React.FC<Props> = ({ title }) => (\n  <h1 className=\"title\">{title}</h1>\n);\n","import { PageTitle } from '../../components/PageTitle';\n\nexport const HomePage = () => {\n  return (\n    <PageTitle title=\"Home Page\" />\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types/Person';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const {\n    slug,\n    sex,\n    name,\n  } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={cn({\n        'has-text-danger': sex === 'f',\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { useParams } from 'react-router-dom';\nimport { PersonLink } from '../PersonLink';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonItem: React.FC<Props> = ({ person }) => {\n  const {\n    slug,\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    mother,\n    father,\n  } = person;\n\n  const { personSlug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({\n        'has-background-warning': slug === personSlug,\n      })}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n\n      <td>{born}</td>\n\n      <td>{died}</td>\n\n      <td>\n        {(mother\n          ? <PersonLink person={mother} />\n          : motherName || '-'\n        )}\n      </td>\n\n      <td>\n        {(father\n          ? <PersonLink person={father} />\n          : fatherName || '-'\n        )}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\n\nimport { Person } from '../../types';\nimport { PersonItem } from '../PersonItem';\n\ntype Props = {\n  people: Person[];\n};\n\nconst tableHeaders = [\n  'Name',\n  'Sex',\n  'Born',\n  'Died',\n  'Mother',\n  'Father',\n];\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => (\n  <table\n    data-cy=\"peopleTable\"\n    className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n  >\n    <thead>\n      <tr>\n        {tableHeaders.map(header => (\n          <th key={header}>{header}</th>\n        ))}\n      </tr>\n    </thead>\n\n    <tbody>\n      {people.map(person => (\n        <PersonItem key={person.slug} person={person} />\n      ))}\n    </tbody>\n  </table>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useState, useEffect } from 'react';\n\nimport { PageTitle } from '../../components/PageTitle';\nimport { PeopleTable } from '../../components/PeopleTable';\nimport { Loader } from '../../components/Loader';\n\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { getPreparedPeople } from '../../tools/getPreparedPeople';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loadError, setLoadError] = useState(false);\n  const [arePeopleLoading, setArePeopleLoading] = useState(true);\n  const [arePeopleLoaded, setArePeopleLoaded] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then(peopleFromServer => {\n        const preparedPeople = getPreparedPeople(peopleFromServer);\n\n        setPeople(preparedPeople);\n        setArePeopleLoaded(true);\n      })\n      .catch(() => {\n        setLoadError(true);\n      })\n      .finally(() => setArePeopleLoading(false));\n  }, []);\n\n  return (\n    <>\n      <PageTitle title=\"People Page\" />\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loadError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {(arePeopleLoaded && people.length === 0) && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {arePeopleLoading && <Loader />}\n\n          {(people.length !== 0 && <PeopleTable people={people} />)}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from '../types';\n\nexport const getPreparedPeople = (people: Person[]) => {\n  return people.map(person => {\n    const mother\n    = people.find(personMother => personMother.name === person.motherName);\n\n    const father\n    = people.find(personFather => personFather.name === person.fatherName);\n\n    return {\n      ...person,\n      mother,\n      father,\n    };\n  });\n};\n","import { PageTitle } from '../../components/PageTitle';\n\nexport const PageNotFound = () => {\n  return (\n    <PageTitle title=\"Page not found\" />\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\n\nimport './App.scss';\n\nimport { Navigation } from './components/Navigation';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { PageNotFound } from './pages/PageNotFound';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":personSlug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<PageNotFound />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}